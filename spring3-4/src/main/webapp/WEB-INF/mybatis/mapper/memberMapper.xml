<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

    <!-- 회원정보 추가  -->    
	<select id="memberSeq" resultType="Integer">
		SELECT member_seq.NEXTVAL FROM DUAL
	</select>
    <insert id="insertMember1" parameterType="Integer">
       INSERT INTO member1(memberIdx) VALUES (#{memberIdx}) 
    </insert>

    <insert id="insertMember2" parameterType="com.sp.member.Member">
       INSERT INTO member2
            (memberIdx, userId, userName, userPwd, email, tel, birth)  VALUES 
            (#{memberIdx}, #{userId}, #{userName}, #{userPwd}, #{email}, #{tel}, #{birth})
    </insert>

    <!-- 회원 정보 가져오기 -->
    <select id="readMember1" resultType="com.sp.member.Member" parameterType="Integer">
        SELECT m1.memberIdx, isMember, userId, userName, userPwd, 
               created_date, modify_date, last_login,
               NVL(enabled, 0) enabled, email, tel, 
               TO_CHAR(birth, 'YYYY-MM-DD') birth
            FROM member1 m1 
            LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
            WHERE memberIdx = #{memberIdx}
    </select>

    <select id="readMember2" resultType="com.sp.member.Member" parameterType="String">
        SELECT memberIdx, userId, userName, userPwd, 
               created_date, modify_date, last_login, enabled, email, tel, 
               TO_CHAR(birth, 'YYYY-MM-DD') birth
            FROM member2
            WHERE userId = #{userId} 
    </select>

	<sql id="where-list">
	  <if test="searchKey=='userId'">
	      INSTR(userId, #{searchValue}) = 1
	  </if>
	  <if test="searchKey=='userName'">
	      INSTR(userName, #{searchValue}) = 1
	  </if>
	</sql>
	
    <select id="dataCount" parameterType="map"
            resultType="Integer">
       SELECT COUNT(*) FROM member1 m1 
             LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
 	     <where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     </where> 
    </select>
    
	<select id="listMember" parameterType="map"
	            resultType="com.sp.member.Member">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT m1.memberIdx, isMember,
			           userId, userName, userPwd, 
                       created_date, modify_date, last_login,
                       NVL(enabled, 0) enabled, email, tel, 
                       TO_CHAR(birth, 'YYYY-MM-DD') birth
                 FROM member1 m1 
                 LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
	            <where>
	     	       <if test="searchValue!=null and searchValue!='' ">
	     	            <include refid="where-list"/>
	     	       </if>
                 </where>                     
                 ORDER BY created_date DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

    <!-- 회원정보 수정  -->    
	<update id="updateMember1" parameterType="Integer">
	    UPDATE member1 SET isMember=0
	           WHERE memberIdx=#{memberIdx}
	</update>
	
    <update id="updateMember2" parameterType="com.sp.member.Member">
        UPDATE member2 SET userPwd=#{userPwd},
               email=#{email}, tel=#{tel}, birth=#{birth},
               modify_date=SYSDATE 
               WHERE userId=#{userId}
    </update>
    
    <update id="updateLastLogin" parameterType="String">
        UPDATE member2 SET last_login=SYSDATE 
                    WHERE userId=#{userId}
    </update>
    
    <!-- 회원 정보 삭제  -->    
    <delete id="deleteMember2" parameterType="String">
    	DELETE FROM member2 WHERE userId=#{userId}
    </delete>

</mapper>