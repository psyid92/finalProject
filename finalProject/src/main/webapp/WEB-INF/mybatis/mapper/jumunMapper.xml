<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jumun">
	<select id="listCategory" resultType="com.sp.jumun.Jumun">
		SELECT cat_Code, cat_Name FROM category
	</select>
	<select id="readMenuCategory" parameterType="Integer" resultType="com.sp.jumun.Jumun">
		SELECT menuct_Num, menuct_Title, menuct_Info, g1_Num, menuct_Enabled
		FROM menuCate
		WHERE g1_Num = #{g1_Num} AND menuct_Enabled = 1
	</select>
	
	<select id="readMainMenu" parameterType="Integer" resultType="com.sp.jumun.Jumun">
		SELECT mainmenu_Num, mainmenu_Title, mainmenu_Content, mainmenu_Photo,
			mainmenu_Pay, mainmenu_Enabled, menuct_Num
		FROM mainmenu
		WHERE menuct_Num = #{menuct_Num} AND mainmenu_Enabled = 1
	</select>
	
	<select id="readSubMenu" parameterType="Integer" resultType="com.sp.jumun.Jumun">
		SELECT submenu_Num, submenu_Title, submenu_Pay, submenu_Enabled, mainmenu_Num
		FROM submenu
		WHERE mainmenu_Num = #{mainmenu_Num} AND submenu_Enabled = 1
	</select>
	
	<select id="mainJumunMenu" parameterType="String" resultType="com.sp.jumun.Jumun">
		SELECT mainmenu_Num, mainmenu_Title, mainmenu_Content, mainmenu_Photo,
			mainmenu_Pay, mainmenu_Enabled, menuct_Num
		FROM mainmenu
		WHERE mainmenu_Num = #{mainmenu_Num} AND mainmenu_Enabled = 1
	</select>
	
	<select id="subJumunMenu" parameterType="String" resultType="com.sp.jumun.Jumun">
		SELECT submenu_Num, submenu_Title, submenu_Pay, submenu_Enabled, mainmenu_Num
		FROM submenu
		WHERE submenu_Num = #{submenu_Num} AND submenu_Enabled = 1
	</select>
	
	<select id="listPayMethod" resultType="com.sp.jumun.Jumun">
		SELECT payMethod_Num, payMethod_Way, payMethod_Content
		FROM payMethod
	</select>
	
	<!-- member 결제내역 가져오기 쿼리 -->
	<select id="getMemberPayList" parameterType="Integer" resultType="com.sp.jumun.JumunMember">
		select distinct j.jumun_num, jumun_pay, jumun_created, jumun_addr, jumun_tel, jumun_memo, m1_num, j.orders_num, orders_state, p.pay_pay , g1_name, g2_tel from jumun j
			join maingoods mg on mg.jumun_num = j.jumun_num
			join mainmenu mm on mm.mainmenu_num = mg.mainmenu_num
			join menucate mc on mc.menuct_num = mm.menuct_num
			join giup1 g on mc.g1_num = g.g1_num
			 join giup2 g2 on g.g1_num = g2.g2_num
			join orders o on o.orders_num = j.orders_num
			left outer join pay p on j.jumun_num = p.jumun_num
			where m1_num=#{m1_num}
			order by jumun_num desc
	</select>
	
	<!-- member 주문상세 가져오기 쿼리 -->
	<select id="getMemberPayDetail" parameterType="map" resultType="com.sp.jumun.JumunMember">
		select distinct j.jumun_num, jumun_pay, jumun_created, jumun_addr, jumun_tel, jumun_memo, m1_num, orders_num,
		   mg.mainmenu_num,mg.maingoods_num, mm.MAINMENU_TITLE, mg.MAINGOODS_COUNT,  sg.submenu_num, sm.SUBMENU_TITLE,sg.SUBGOODS_NUM from jumun j
			left outer join maingoods mg on mg.jumun_num = j.jumun_num
			left outer join mainmenu mm on mg.MAINMENU_NUM = mm.MAINMENU_NUM
			left outer join subgoods sg on mg.maingoods_num = sg.MAINGOODS_NUM
			left outer join submenu sm on sg.SUBMENU_NUM = sm.SUBMENU_NUM
			where j.M1_NUM = #{m1_num} and j.jumun_num=#{jumun_num}
			order by jumun_num desc	
	</select>
	
	<!-- 기업 수정 -->
	<select id="listGiup" parameterType="map" resultType="com.sp.jumun.Jumun">
		SELECT tb.* FROM (
	 		SELECT DISTINCT g1.g1_Num, g1_Id, g1_Pwd, g1_Name, g1_Sleep, cat_Code,
	       	g3_lati, g3_longti,
	       	DISTNACE_WGS84(#{cur_lng},#{cur_lat},g3_longti,g3_lati) distance,
	       	NVL(SUM(giupAD_State)OVER(PARTITION BY ga.G1_NUM),0) giupAD_State
	       	FROM giup1 g1
	       	LEFT OUTER JOIN giupAd ga ON g1.g1_Num = ga.g1_Num
	       	LEFT OUTER JOIN giup3 g3 ON g1.g1_Num = g3.g3_Num
	       	<where>
	       		g1_Sleep = 1 AND g1_Enabled = 1 AND g1.g1_Num != 1
	     		<if test="category!=null and category!='' ">
	       			AND cat_Code = #{category}
	     		</if>
	     		<if test="searchValue!=null and searchValue!='' and searchValue != category">
	     			AND INSTR(g1_Name, #{searchValue}) != 0
	     		</if>
	     	</where>
	       	ORDER BY giupad_state DESC
<![CDATA[
	    )tb WHERE distance < 5
]]>
	</select>
	
	<select id="listReview" parameterType="map" resultType="com.sp.jumun.Review">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT gr.rep_Num, rep_Star, rep_Content, rep_Created, gr.m1_Num, gr.g1_Num, jumun_Num,
					rphoto_SaveFilename, rphoto_OriginalFilename,
					rrep_Num, rrep_Content, rrep_Created, m1_Nickname
				FROM giupReview gr
				LEFT OUTER JOIN reviewPhoto rp ON gr.rep_Num = rp.rep_Num
				LEFT OUTER JOIN reviewReply rr ON gr.rep_Num = rr.rep_Num
				LEFT OUTER JOIN member1 m1 ON gr.m1_Num = m1.m1_Num
				WHERE gr.g1_Num = #{g1_Num}
				ORDER BY gr.rep_Num
<![CDATA[
			) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
]]>
	</select>
	
	<insert id="insertLikeGiup" parameterType="map">
		INSERT INTO likeGiup(g1_Num, m1_Num) VALUES(#{g1_Num}, #{m1_Num})
	</insert>
	
	<delete id="deleteLikeGiup" parameterType="map">
		DELETE FROM likeGiup WHERE g1_Num = #{g1_Num} AND m1_Num = #{m1_Num}
	</delete>

	<select id="likeGiup" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM likeGiup WHERE g1_Num = #{g1_Num} AND m1_Num = #{m1_Num}
	</select>
</mapper>