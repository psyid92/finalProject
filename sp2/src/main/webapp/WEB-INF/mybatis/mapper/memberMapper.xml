<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

    <!-- 회원정보 추가  -->    
    <insert id="insertMember1" parameterType="com.sp.member.Member">
       INSERT INTO member1(userId, userName, userPwd) VALUES (#{userId}, #{userName}, #{userPwd}) 
    </insert>

    <insert id="insertMember2" parameterType="com.sp.member.Member">
       INSERT INTO member2
            (userId, birth, email, tel, zip, addr1, addr2)  VALUES 
            (#{userId}, #{birth}, #{email}, #{tel}, 
                    #{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR}, #{addr2, jdbcType=VARCHAR})
    </insert>

    <!-- 회원 정보 가져오기 -->
    <select id="readMember" resultType="com.sp.member.Member" parameterType="String">
        SELECT m1.userId, userName, userPwd, 
               created_date, modify_date, last_login,
               NVL(enabled, 0) enabled, email, tel, 
               TO_CHAR(birth, 'YYYY-MM-DD') birth, zip, addr1, addr2
            FROM member1 m1 
            LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
            WHERE m1.userId = #{userId} AND enabled !=0
    </select>

    <select id="dataCount" parameterType="map"
            resultType="Integer">
       SELECT COUNT(*) FROM member1 m1 
             LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
             <if test="searchValue != null and searchValue != ''">
                 WHERE ${searchKey} LIKE #{searchValue} || '%'
             </if>                    
    </select>
    
	<select id="listMember" parameterType="map"
	            resultType="com.sp.member.Member">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT m1.userId, userName, userPwd, 
                       created_date, modify_date, last_login,
                       NVL(enabled, 0) enabled, email, tel, 
                       TO_CHAR(birth, 'YYYY-MM-DD') birth
                 FROM member1 m1 
                 LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
                 <if test="searchValue != null and searchValue != ''">
                     WHERE ${searchKey} LIKE #{searchValue} || '%'
                 </if>                    
                 ORDER BY created_date DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

    <!-- 회원정보 수정  -->    
    <update id="updateMember1" parameterType="com.sp.member.Member">
        UPDATE member1 SET userPwd=#{userPwd}, modify_date=SYSDATE
               WHERE userId=#{userId}
    </update>
	
    <update id="updateMember2" parameterType="com.sp.member.Member">
        UPDATE member2 SET email=#{email, jdbcType=VARCHAR}, 
                     tel=#{tel, jdbcType=VARCHAR}, birth=#{birth, jdbcType=VARCHAR},
                     zip=#{zip, jdbcType=VARCHAR},
                     addr1=#{addr1, jdbcType=VARCHAR}, addr2=#{addr2, jdbcType=VARCHAR}
               WHERE userId=#{userId}
    </update>

    <update id="updateMemberEnabled" parameterType="map">
        UPDATE member1 SET enabled=#{enabled}
               WHERE userId=#{userId}
    </update>
    
    <update id="updateLastLogin" parameterType="String">
        UPDATE member1 SET last_login=SYSDATE 
                    WHERE userId=#{userId}
    </update>
    
    <!-- 회원 정보 삭제  -->    
    <delete id="deleteMember2" parameterType="String">
    	DELETE FROM member2 WHERE userId=#{userId}
    </delete>
</mapper>