<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<insert id="insertBoard" parameterType="com.sp.bbs.Board">
	  INSERT INTO bbs(num, userId, subject, content,
	          saveFilename, originalFilename) VALUES
	         (bbs_seq.NEXTVAL, #{userId}, #{subject}, #{content},
	           #{saveFilename, jdbcType=VARCHAR}, 
	           #{originalFilename, jdbcType=VARCHAR}
	         )
	</insert>

	<!-- sql 태그 -->
	<!--
       * LIKE 대신 INSTR() 함수를 사용하는 경우
          INSTR(content, #{searchValue}) &gt; 0
       * CLOB인 경우 검색(CLOB는 LIKE를 사용하면 성능 저하)
          DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	-->
	<sql id="where-list">
	  <if test="searchKey=='userName'">
	      userName=#{searchValue}
	  </if>
	  <if test="searchKey=='subject'">
	      INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='content'">
	      DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	  </if>
	  <if test="searchKey=='created'">
	      TO_CHAR(b.created, 'YYYY-MM-DD') = #{searchValue}
	      OR TO_CHAR(b.created, 'YYYYMMDD') = #{searchValue}
	  </if>
	</sql>

	<!-- 글개수 -->
	<select id="dataCount" parameterType="map"
	            resultType="Integer">
	  SELECT NVL(COUNT(*), 0) FROM bbs b
	        JOIN member2 m
	        ON b.userId=m.userId
	     <where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     </where>   
	</select>

	<!-- 글리스트 -->
	<select id="listBoard" parameterType="map"
	            resultType="com.sp.bbs.Board">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT num, m.memberIdx, b.userId, userName, subject
			           ,TO_CHAR(b.created, 'YYYY-MM-DD') created
					   ,hitCount, saveFilename
			        FROM bbs b JOIN member2 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list"/>
		                 </if>
	                </where>
	                ORDER BY num DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

	<!-- 글보기 -->
	<select id="readBoard" resultType="com.sp.bbs.Board" parameterType="Integer">
		SELECT num, m.memberIdx, b.userId, userName, subject, content
				   ,hitCount, b.created,  saveFilename, originalFilename
		FROM bbs b JOIN member2 m ON b.userId=m.userId
		WHERE num = #{num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE bbs SET hitCount=hitCount+1 WHERE num = #{num}
	</update>
	
	<!-- AND 가 필요 없는 경우 자동으로 제거 됨 -->
	<!-- 이전글 -->
	<select id="preReadBoard" resultType="com.sp.bbs.Board" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT num, subject
			      FROM bbs b
			      JOIN member2 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list"/>
		                 </if>
		               <![CDATA[
		                 AND (num > #{num})
		                 ]]>
	                </where>
				ORDER BY num ASC
			) tb WHERE ROWNUM=1
	</select>

	<!-- 다음글 -->
	<select id="nextReadBoard" resultType="com.sp.bbs.Board" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT num, subject
			       FROM bbs b
			       JOIN member2 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list"/>
		                 </if>
		               <![CDATA[
		                 AND (num < #{num})
		                 ]]>
	                </where>
				ORDER BY num DESC
			) tb WHERE ROWNUM=1
	</select>

     <!-- 수정 -->
     <update id="updateBoard" parameterType="com.sp.bbs.Board">
         UPDATE bbs SET subject=#{subject}, content=#{content}
                    ,saveFilename=#{saveFilename, jdbcType=VARCHAR}
                    ,originalFilename=#{originalFilename, jdbcType=VARCHAR}
                    WHERE num = #{num}
      </update>
      
      <!-- 삭제 -->
      <delete id="deleteBoard" parameterType="Integer">
           DELETE FROM bbs WHERE num = #{num}
      </delete>

	<!-- 게시물 공감 ................. -->
	<insert id="insertLikeBoard" parameterType="com.sp.bbs.Board">
	INSERT INTO bbsLike(num, userId) VALUES (#{num}, #{userId})
	</insert>

	<select id="countLikeBoard" resultType="Integer" parameterType="Integer">
	   SELECT  NVL(COUNT(*), 0) boardCountLike
	        FROM bbsLike WHERE num=#{num}
	</select>

	<!-- 회원 탈퇴시 게시물 삭제 ................. -->
	<select id="listBoardId" parameterType="String" resultType="com.sp.bbs.Board">
	   SELECT num, m.memberIdx, b.userId, userName, subject, content
				   ,hitCount, b.created,  saveFilename, originalFilename
		FROM bbs b JOIN member2 m ON b.userId=m.userId
		WHERE userId = #{userId}
	</select>
    <delete id="deleteBoardId" parameterType="String">
         DELETE FROM bbs WHERE userId = #{userId}
    </delete>

	<!-- 댓글 처리................. -->
	<insert id="insertReply" parameterType="com.sp.bbs.Reply">
	INSERT INTO bbsReply(replyNum, num, userId, content, answer)
	   VALUES (bbsReply_seq.NEXTVAL, #{num},#{userId},
	        #{content}, #{answer})
	</insert>
	
	<select id="replyDataCount" resultType="Integer" 
	           parameterType="map">
	   SELECT NVL(COUNT(*), 0)
	        FROM bbsReply WHERE num=#{num} AND answer=0
	</select>
	
	<!-- 댓글 리스트 -->
	<select id="listReply" resultType="com.sp.bbs.Reply" 
	          parameterType="map">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT tbreply.replyNum, num, userId, userName 
		                    ,content, created, tbreply.answer
		                    ,NVL(answerCount, 0) answerCount
		                    ,NVL(likeCount, 0) likeCount
		                    ,NVL(disLikeCount, 0) disLikeCount
		        FROM
		        (
				      (
					     SELECT replyNum, r.num, m.memberIdx, r.userId, userName, r.content, r.created, answer
					        FROM bbsReply r 
			                JOIN bbs b ON r.num=b.num
			                JOIN member2 m ON r.userId=m.userId
			                WHERE r.num=#{num} AND answer=0
			           ) tbreply
			           LEFT OUTER JOIN
			           (
			                SELECT answer, COUNT(*) answerCount
                                 FROM bbsReply GROUP BY answer
			           ) tbanswer ON tbreply.replyNum = tbanswer.answer
			           LEFT OUTER JOIN
			           (
			                SELECT replyNum, 
			                         COUNT(DECODE(replyLike, 1, 1)) likeCount,
			                         COUNT(DECODE(replyLike, 0, 1)) disLikeCount
                                 FROM bbsReplyLike GROUP BY replyNum
			           ) tblike ON tbreply.replyNum = tblike.replyNum
	           )
	           ORDER BY replyNum DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

    <!-- 댓글별 답글 리스트 -->
	<select id="listReplyAnswer" resultType="com.sp.bbs.Reply" 
	          parameterType="Integer">
     SELECT replyNum, num, m.memberIdx, tbreply.userId, userName, content, created, answer
	          FROM bbsReply tbreply 
	          JOIN member2 m ON tbreply.userId=m.userId
              WHERE answer=#{answer}
              ORDER BY replyNum DESC
	</select>
	
    <!-- 댓글별 답글 개수 -->
	<select id="replyCountAnswer" resultType="Integer" 
	           parameterType="Integer">
	   SELECT NVL(COUNT(*), 0)
	        FROM bbsReply WHERE answer=#{answer}
	</select>
	
	<delete id="deleteReply" parameterType="map">
	DELETE bbsReply WHERE
	    <if test="mode == 'num' ">
			 num=#{num}
		</if>
	    <if test="mode == 'reply' ">
			 replyNum IN 
               (SELECT replyNum FROM bbsReply START WITH  replyNum = #{replyNum}
	            CONNECT BY PRIOR replyNum = answer)
		</if>
	    <if test="mode == 'answer' ">
			 replyNum=#{replyNum}
		</if>
	</delete>
	
	<!-- 댓글 좋아요/싫어요 처리................. -->
	<insert id="insertReplyLike" parameterType="com.sp.bbs.Reply">
	INSERT INTO bbsReplyLike(replyNum, userId, replyLike)
	   VALUES (#{replyNum}, #{userId}, #{replyLike})
	</insert>

	<select id="replyCountLike" resultType="map" 
	           parameterType="Integer">
	   SELECT  NVL(COUNT(DECODE(replyLike, 1, 1)), 0) likeCount,
			        NVL(COUNT(DECODE(replyLike, 0, 1)), 0) disLikeCount
	        FROM bbsReplyLike WHERE replyNum=#{replyNum}
	</select>

</mapper>