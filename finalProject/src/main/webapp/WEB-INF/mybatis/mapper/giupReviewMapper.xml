<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="giupreview">


<!-- insert into giupreview(rep_num, rep_star, rep_content, m1_num, g1_num, jumun_num) values(GIUPREVIEW_SEQ.nextval, 4, '맛있었습니다', 41, 1004, 48 ); -->

<select id="selectReviewSeq" resultType="Integer">
	select GIUPREVIEW_SEQ.nextval from dual
</select>


<!-- 리뷰 삽입 / 리뷰 등록 -->
<insert id="insertGiupReview" parameterType="com.sp.giupReview.giupReview">
	insert into giupreview(rep_num, rep_star, rep_content, m1_num, g1_num, jumun_num) 
		values(#{rep_num}, #{rep_star}, #{rep_content}, #{m1_num}, (
			select distinct mc.g1_num from menucate mc
			    join MAINMENU mm on mm.menuct_Num = mc.menuct_Num
			    join mainGoods mg on mm.mainmenu_Num = mg.mainmenu_Num
			    join jumun j on j.jumun_Num = mg.jumun_Num
			    where j.jumun_Num = #{jumun_num}
		), #{jumun_num} )
</insert>

<!-- 리뷰 있는지 없는지 확인 -->
<select id="getNumReview" parameterType="com.sp.giupReview.giupReview" resultType="Integer">
	select nvl(count(*), 0) from giupReview
		where m1_num = #{m1_num} and jumun_num=  #{jumun_num}
</select>

<!-- 리뷰 내용 가져오기 -->
<select id="getReview" parameterType="com.sp.giupReview.giupReview" resultType="com.sp.giupReview.giupReview">
	select rep_num, rep_star, rep_created, rep_content, m1_num, g1_num, jumun_num from giupReview
		where m1_num = #{m1_num} and jumun_num=  #{jumun_num}
</select>

<!-- 리뷰 삭제하기 -->
<delete id="deleteReview" parameterType="com.sp.giupReview.giupReview">
	delete giupReview
		where m1_num = #{m1_num} and jumun_num=  #{jumun_num}
</delete>



<!-- 리뷰 사진 -->
<insert id="insertReviewPhoto" parameterType="com.sp.giupReview.giupReview">
	insert into reviewPhoto (RPHOTO_SAVEFILENAME, RPHOTO_ORIGINALFILENAME, REP_NUM)
		values(#{RPHOTO_SAVEFILENAME}, #{RPHOTO_ORIGINALFILENAME}, #{REP_NUM} )
</insert>

</mapper>